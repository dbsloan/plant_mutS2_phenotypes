data=domain_dat_full, geom=geom_text, hjust = 0,
mapping=aes(x=0, label= TipLabels), size=3)
#add seq length line
p4<-facet_plot(p2, panel = "domains", data = domain_dat_full, geom= geom_segment,
mapping = aes(x=0, xend=Seq_ln, y=y, yend=y), size=0.5, color='black')
#Add domains
p5<-facet_plot(p4, panel = "domains", data = domain_dat_full, geom=geom_segment,
aes(x=From, xend=To, y=y, yend=y, col=Short.name), size=3) +
theme(legend.position = "right")
#Add names of domains (optional)
p6<-facet_plot(p5, panel='domains',
data=domain_dat_full, geom=geom_text,
mapping=aes(x=From+20, label= Short.name), size=2)
#Save tree as pdf
#the height argument is just a rough way of estimating a good size for the plot based on how many tips there are. Can be set manually instead.
ggplot2::ggsave(filename = "Domains.pdf",
plot = p5,
width = 8,
height = (length(tree$tip.label)/4)) #the height argument is just a rough way of estimating a good size for the plot based on how many tips there are.
#Set working directory
#Designate which packages to load and library
#This is a long list of packages I use frequently but I don't think all of them are at use in this script.
#If any are causing problems, try removing them from the list.
package_list<-c("dplyr", "ape", "treeio", "ggtree", "tidytree", "seqinr", "ggplot2", "phytools", "phangorn", "viridis")
#Loop to check if package is installed and 'libraried'. If it isn't already, then install and library
for(k in 1:length(package_list)){
library(package_list[k], character.only=TRUE)
}
#Read in the  tree (as a typical tree object)
tree<-ggtree::read.tree(file = "RAxML_bipartitionsBranchLabels.raxmlRerun")
ogroupNames <- c("Bacillus_subtilis_subsp_CAB14818.1", "Borreliella_burgdorferi_AAC66481.1",
"Helicobacter_pylori_AAD07685.1", "Aquifex_aeolicus_AAC07247.1")
#root tree
tree_unrooted <- ape::unroot(tree)
tree_rooted <- ape::root(tree_unrooted, outgroup = ogroupNames,
node = (mrca.phylo(tree_unrooted, ogroupNames)),
resolve.root=TRUE)
#Read in domain data for the tree
#This file was generated using the web-based tool at: https://www.ncbi.nlm.nih.gov/Structure/bwrpsb/bwrpsb.cgi
#then remove the first 7 lines
domain_dat<-read.table(file = "domains.txt", sep = "\t", header = TRUE)
#Change first column name
names(domain_dat)[1]<-"Newick_label"
#Get sequence file
seqs<-seqinr::read.fasta(file = "MutS2.fasta")
#add the sequence length data to the df
domain_dat_full<-right_join(domain_dat, data.frame(Newick_label=names(seqs), Seq_ln=getLength(seqs)))
#Change the classes in the data frame
domain_dat_full[,1]<-paste(domain_dat_full[,1]) #sequence names
domain_dat_full[,4]<-as.numeric(paste(domain_dat_full[,4])) #from
domain_dat_full[,5]<-as.numeric(paste(domain_dat_full[,5])) #to
domain_dat_full[,6]<-as.numeric(paste(domain_dat_full[,6])) #e-val
domain_dat_full[,7]<-as.numeric(paste(domain_dat_full[,7])) #bitscore
domain_dat_full[,8]<-paste(domain_dat_full[,8]) #accession ID
domain_dat_full[,9]<-paste(domain_dat_full[,9]) #short name
domain_dat_full[,10]<-paste(domain_dat_full[,10]) #incomplete
domain_dat_full[,11]<-paste(domain_dat_full[,11]) #superfamily
domain_dat_full[,12]<-as.numeric(paste(domain_dat_full[,12]))
#Make a new column that's the same as newick labels
domain_dat_full[,13]<-paste(domain_dat_full[,1])
names(domain_dat_full)[13]<-"TipLabels"
#Make a ggtree object - does NOT keep BS vals
p<-ggtree(tree_rooted, branch.length ='none', ladderize = TRUE) + scale_color_viridis(discrete = TRUE)
#Add tip names in as a facet
p2<-facet_plot(p, panel='Species Names',
data=domain_dat_full, geom=geom_text, hjust = 0,
mapping=aes(x=0, label= TipLabels), size=3)
#add seq length line
p4<-facet_plot(p2, panel = "domains", data = domain_dat_full, geom= geom_segment,
mapping = aes(x=0, xend=Seq_ln, y=y, yend=y), size=0.5, color='black')
#Add domains
p5<-facet_plot(p4, panel = "domains", data = domain_dat_full, geom=geom_segment,
aes(x=From, xend=To, y=y, yend=y, col=Short.name), size=3) +
theme(legend.position = "right")
#Add names of domains (optional)
p6<-facet_plot(p5, panel='domains',
data=domain_dat_full, geom=geom_text,
mapping=aes(x=From+20, label= Short.name), size=2)
#Save tree as pdf
ggplot2::ggsave(filename = "Domains.pdf",
plot = p5,
width = 8,
height = (length(tree$tip.label)/4))
setwd("domains/")
#Set working directory
#Designate which packages to load and library
#This is a long list of packages I use frequently but I don't think all of them are at use in this script.
#If any are causing problems, try removing them from the list.
package_list<-c("dplyr", "ape", "treeio", "ggtree", "tidytree", "seqinr", "ggplot2", "phytools", "phangorn", "viridis")
#Loop to check if package is installed and 'libraried'. If it isn't already, then install and library
for(k in 1:length(package_list)){
library(package_list[k], character.only=TRUE)
}
#Read in the  tree (as a typical tree object)
tree<-ggtree::read.tree(file = "RAxML_bipartitions.BranchLabels.nwk")
ogroupNames <- c("Bacillus_subtilis_subsp_CAB14818.1", "Borreliella_burgdorferi_AAC66481.1",
"Helicobacter_pylori_AAD07685.1", "Aquifex_aeolicus_AAC07247.1")
#root tree
tree_unrooted <- ape::unroot(tree)
tree_rooted <- ape::root(tree_unrooted, outgroup = ogroupNames,
node = (mrca.phylo(tree_unrooted, ogroupNames)),
resolve.root=TRUE)
#Read in domain data for the tree
#This file was generated using the web-based tool at: https://www.ncbi.nlm.nih.gov/Structure/bwrpsb/bwrpsb.cgi
#then remove the first 7 lines
domain_dat<-read.table(file = "domains.txt", sep = "\t", header = TRUE)
#Change first column name
names(domain_dat)[1]<-"Newick_label"
#Get sequence file
seqs<-seqinr::read.fasta(file = "seqs.fasta")
#add the sequence length data to the df
domain_dat_full<-right_join(domain_dat, data.frame(Newick_label=names(seqs), Seq_ln=getLength(seqs)))
#Change the classes in the data frame
domain_dat_full[,1]<-paste(domain_dat_full[,1]) #sequence names
domain_dat_full[,4]<-as.numeric(paste(domain_dat_full[,4])) #from
domain_dat_full[,5]<-as.numeric(paste(domain_dat_full[,5])) #to
domain_dat_full[,6]<-as.numeric(paste(domain_dat_full[,6])) #e-val
domain_dat_full[,7]<-as.numeric(paste(domain_dat_full[,7])) #bitscore
domain_dat_full[,8]<-paste(domain_dat_full[,8]) #accession ID
domain_dat_full[,9]<-paste(domain_dat_full[,9]) #short name
domain_dat_full[,10]<-paste(domain_dat_full[,10]) #incomplete
domain_dat_full[,11]<-paste(domain_dat_full[,11]) #superfamily
domain_dat_full[,12]<-as.numeric(paste(domain_dat_full[,12]))
#Make a new column that's the same as newick labels
domain_dat_full[,13]<-paste(domain_dat_full[,1])
names(domain_dat_full)[13]<-"TipLabels"
#Make a ggtree object - does NOT keep BS vals
p<-ggtree(tree_rooted, branch.length ='none', ladderize = TRUE) + scale_color_viridis(discrete = TRUE)
#Add tip names in as a facet
p2<-facet_plot(p, panel='Species Names',
data=domain_dat_full, geom=geom_text, hjust = 0,
mapping=aes(x=0, label= TipLabels), size=3)
#add seq length line
p4<-facet_plot(p2, panel = "domains", data = domain_dat_full, geom= geom_segment,
mapping = aes(x=0, xend=Seq_ln, y=y, yend=y), size=0.5, color='black')
#Add domains
p5<-facet_plot(p4, panel = "domains", data = domain_dat_full, geom=geom_segment,
aes(x=From, xend=To, y=y, yend=y, col=Short.name), size=3) +
theme(legend.position = "right")
#Add names of domains (optional)
p6<-facet_plot(p5, panel='domains',
data=domain_dat_full, geom=geom_text,
mapping=aes(x=From+20, label= Short.name), size=2)
#Save tree as pdf
ggplot2::ggsave(filename = "Domains.pdf",
plot = p5,
width = 8,
height = (length(tree$tip.label)/4))
#Set working directory
#Designate which packages to load and library
#This is a long list of packages I use frequently but I don't think all of them are at use in this script.
#If any are causing problems, try removing them from the list.
package_list<-c("dplyr", "ape", "treeio", "ggtree", "tidytree", "seqinr", "ggplot2", "phytools", "phangorn", "viridis")
#Loop to check if package is installed and 'libraried'. If it isn't already, then install and library
for(k in 1:length(package_list)){
library(package_list[k], character.only=TRUE)
}
#Read in the  tree (as a typical tree object)
tree<-ggtree::read.tree(file = "RAxML_bipartitions.BranchLabels.nwk")
ogroupNames <- c("Bacillus_subtilis_subsp_CAB14818.1", "Borreliella_burgdorferi_AAC66481.1",
"Helicobacter_pylori_AAD07685.1", "Aquifex_aeolicus_AAC07247.1")
#root tree
tree_unrooted <- ape::unroot(tree)
tree_rooted <- ape::root(tree_unrooted, outgroup = ogroupNames,
node = (mrca.phylo(tree_unrooted, ogroupNames)),
resolve.root=TRUE)
#Read in domain data for the tree
#This file was generated using the web-based tool at: https://www.ncbi.nlm.nih.gov/Structure/bwrpsb/bwrpsb.cgi
#then remove the first 7 lines
domain_dat<-read.table(file = "domains.txt", sep = "\t", header = TRUE)
#Change first column name
names(domain_dat)[1]<-"Newick_label"
#Get sequence file
seqs<-seqinr::read.fasta(file = "seqs.fasta")
#add the sequence length data to the df
domain_dat_full<-right_join(domain_dat, data.frame(Newick_label=names(seqs), Seq_ln=getLength(seqs)))
#Change the classes in the data frame
domain_dat_full[,1]<-paste(domain_dat_full[,1]) #sequence names
domain_dat_full[,4]<-as.numeric(paste(domain_dat_full[,4])) #from
domain_dat_full[,5]<-as.numeric(paste(domain_dat_full[,5])) #to
domain_dat_full[,6]<-as.numeric(paste(domain_dat_full[,6])) #e-val
domain_dat_full[,7]<-as.numeric(paste(domain_dat_full[,7])) #bitscore
domain_dat_full[,8]<-paste(domain_dat_full[,8]) #accession ID
domain_dat_full[,9]<-paste(domain_dat_full[,9]) #short name
domain_dat_full[,10]<-paste(domain_dat_full[,10]) #incomplete
domain_dat_full[,11]<-paste(domain_dat_full[,11]) #superfamily
domain_dat_full[,12]<-as.numeric(paste(domain_dat_full[,12]))
#Make a new column that's the same as newick labels
domain_dat_full[,13]<-paste(domain_dat_full[,1])
names(domain_dat_full)[13]<-"TipLabels"
#Make a ggtree object - does NOT keep BS vals
p<-ggtree(tree_rooted, branch.length ='none', ladderize = TRUE) + scale_color_viridis(discrete = TRUE)
#Add tip names in as a facet
p2<-facet_plot(p, panel='Species Names',
data=domain_dat_full, geom=geom_text, hjust = 0,
mapping=aes(x=0, label= TipLabels), size=3)
#add seq length line
p4<-facet_plot(p2, panel = "domains", data = domain_dat_full, geom= geom_segment,
mapping = aes(x=0, xend=Seq_ln, y=y, yend=y), size=0.5, color='black')
#Add domains
p5<-facet_plot(p4, panel = "domains", data = domain_dat_full, geom=geom_segment,
aes(x=From, xend=To, y=y, yend=y, col=Short.name), size=3) +
theme(legend.position = "right")
#Add names of domains (optional)
p6<-facet_plot(p5, panel='domains',
data=domain_dat_full, geom=geom_text,
mapping=aes(x=From+20, label= Short.name), size=2)
#Save tree as pdf
ggplot2::ggsave(filename = "Domains.pdf",
plot = p5,
width = 8,
height = (length(tree$tip.label)/4))
#Set working directory
#Designate which packages to load and library
#This is a long list of packages I use frequently but I don't think all of them are at use in this script.
#If any are causing problems, try removing them from the list.
package_list<-c("dplyr", "ape", "treeio", "ggtree", "tidytree", "seqinr", "ggplot2", "phytools", "phangorn", "viridis")
#Loop to check if package is installed and 'libraried'. If it isn't already, then install and library
for(k in 1:length(package_list)){
library(package_list[k], character.only=TRUE)
}
#Read in the  tree (as a typical tree object)
tree<-ggtree::read.tree(file = "RAxML_bipartitions.nwk")
ogroupNames <- c("Bacillus_subtilis_subsp_CAB14818.1", "Borreliella_burgdorferi_AAC66481.1",
"Helicobacter_pylori_AAD07685.1", "Aquifex_aeolicus_AAC07247.1")
#root tree
tree_unrooted <- ape::unroot(tree)
tree_rooted <- ape::root(tree_unrooted, outgroup = ogroupNames,
node = (mrca.phylo(tree_unrooted, ogroupNames)),
resolve.root=TRUE)
#Read in domain data for the tree
#This file was generated using the web-based tool at: https://www.ncbi.nlm.nih.gov/Structure/bwrpsb/bwrpsb.cgi
#then remove the first 7 lines
domain_dat<-read.table(file = "domains.txt", sep = "\t", header = TRUE)
#Change first column name
names(domain_dat)[1]<-"Newick_label"
#Get sequence file
seqs<-seqinr::read.fasta(file = "seqs.fasta")
#add the sequence length data to the df
domain_dat_full<-right_join(domain_dat, data.frame(Newick_label=names(seqs), Seq_ln=getLength(seqs)))
#Change the classes in the data frame
domain_dat_full[,1]<-paste(domain_dat_full[,1]) #sequence names
domain_dat_full[,4]<-as.numeric(paste(domain_dat_full[,4])) #from
domain_dat_full[,5]<-as.numeric(paste(domain_dat_full[,5])) #to
domain_dat_full[,6]<-as.numeric(paste(domain_dat_full[,6])) #e-val
domain_dat_full[,7]<-as.numeric(paste(domain_dat_full[,7])) #bitscore
domain_dat_full[,8]<-paste(domain_dat_full[,8]) #accession ID
domain_dat_full[,9]<-paste(domain_dat_full[,9]) #short name
domain_dat_full[,10]<-paste(domain_dat_full[,10]) #incomplete
domain_dat_full[,11]<-paste(domain_dat_full[,11]) #superfamily
domain_dat_full[,12]<-as.numeric(paste(domain_dat_full[,12]))
#Make a new column that's the same as newick labels
domain_dat_full[,13]<-paste(domain_dat_full[,1])
names(domain_dat_full)[13]<-"TipLabels"
#Make a ggtree object - does NOT keep BS vals
p<-ggtree(tree_rooted, branch.length ='none', ladderize = TRUE) + scale_color_viridis(discrete = TRUE)
#Add tip names in as a facet
p2<-facet_plot(p, panel='Species Names',
data=domain_dat_full, geom=geom_text, hjust = 0,
mapping=aes(x=0, label= TipLabels), size=3)
#add seq length line
p4<-facet_plot(p2, panel = "domains", data = domain_dat_full, geom= geom_segment,
mapping = aes(x=0, xend=Seq_ln, y=y, yend=y), size=0.5, color='black')
#Add domains
p5<-facet_plot(p4, panel = "domains", data = domain_dat_full, geom=geom_segment,
aes(x=From, xend=To, y=y, yend=y, col=Short.name), size=3) +
theme(legend.position = "right")
#Add names of domains (optional)
p6<-facet_plot(p5, panel='domains',
data=domain_dat_full, geom=geom_text,
mapping=aes(x=From+20, label= Short.name), size=2)
#Save tree as pdf
ggplot2::ggsave(filename = "Domains.pdf",
plot = p5,
width = 8,
height = (length(tree$tip.label)/4))
#Set working directory
#Designate which packages to load and library
#This is a long list of packages I use frequently but I don't think all of them are at use in this script.
#If any are causing problems, try removing them from the list.
package_list<-c("dplyr", "ape", "treeio", "ggtree", "tidytree", "seqinr", "ggplot2", "phytools", "phangorn", "viridis")
#Loop to check if package is installed and 'libraried'. If it isn't already, then install and library
for(k in 1:length(package_list)){
library(package_list[k], character.only=TRUE)
}
#Read in the  tree (as a typical tree object)
tree<-ggtree::read.tree(file = "../RAxML_bipartitions.nwk")
ogroupNames <- c("Bacillus_subtilis_subsp_CAB14818.1", "Borreliella_burgdorferi_AAC66481.1",
"Helicobacter_pylori_AAD07685.1", "Aquifex_aeolicus_AAC07247.1")
#root tree
tree_unrooted <- ape::unroot(tree)
tree_rooted <- ape::root(tree_unrooted, outgroup = ogroupNames,
node = (mrca.phylo(tree_unrooted, ogroupNames)),
resolve.root=TRUE)
#Read in domain data for the tree
#This file was generated using the web-based tool at: https://www.ncbi.nlm.nih.gov/Structure/bwrpsb/bwrpsb.cgi
#then remove the first 7 lines
domain_dat<-read.table(file = "domains.txt", sep = "\t", header = TRUE)
#Change first column name
names(domain_dat)[1]<-"Newick_label"
#Get sequence file
seqs<-seqinr::read.fasta(file = "seqs.fasta")
#add the sequence length data to the df
domain_dat_full<-right_join(domain_dat, data.frame(Newick_label=names(seqs), Seq_ln=getLength(seqs)))
#Change the classes in the data frame
domain_dat_full[,1]<-paste(domain_dat_full[,1]) #sequence names
domain_dat_full[,4]<-as.numeric(paste(domain_dat_full[,4])) #from
domain_dat_full[,5]<-as.numeric(paste(domain_dat_full[,5])) #to
domain_dat_full[,6]<-as.numeric(paste(domain_dat_full[,6])) #e-val
domain_dat_full[,7]<-as.numeric(paste(domain_dat_full[,7])) #bitscore
domain_dat_full[,8]<-paste(domain_dat_full[,8]) #accession ID
domain_dat_full[,9]<-paste(domain_dat_full[,9]) #short name
domain_dat_full[,10]<-paste(domain_dat_full[,10]) #incomplete
domain_dat_full[,11]<-paste(domain_dat_full[,11]) #superfamily
domain_dat_full[,12]<-as.numeric(paste(domain_dat_full[,12]))
#Make a new column that's the same as newick labels
domain_dat_full[,13]<-paste(domain_dat_full[,1])
names(domain_dat_full)[13]<-"TipLabels"
#Make a ggtree object - does NOT keep BS vals
p<-ggtree(tree_rooted, branch.length ='none', ladderize = TRUE) + scale_color_viridis(discrete = TRUE)
#Add tip names in as a facet
p2<-facet_plot(p, panel='Species Names',
data=domain_dat_full, geom=geom_text, hjust = 0,
mapping=aes(x=0, label= TipLabels), size=3)
#add seq length line
p4<-facet_plot(p2, panel = "domains", data = domain_dat_full, geom= geom_segment,
mapping = aes(x=0, xend=Seq_ln, y=y, yend=y), size=0.5, color='black')
#Add domains
p5<-facet_plot(p4, panel = "domains", data = domain_dat_full, geom=geom_segment,
aes(x=From, xend=To, y=y, yend=y, col=Short.name), size=3) +
theme(legend.position = "right")
#Add names of domains (optional)
p6<-facet_plot(p5, panel='domains',
data=domain_dat_full, geom=geom_text,
mapping=aes(x=From+20, label= Short.name), size=2)
#Save tree as pdf
ggplot2::ggsave(filename = "Domains.pdf",
plot = p5,
width = 8,
height = (length(tree$tip.label)/4))
###R code adapted from Warren et al. 2023 MBE. doi: 10.1093/molbev/msad163
###Modified by Shady Kuster
## Generate trees of aaRSs with targeting predictions ##
library (tidyverse)
library(ggtree)
library(aplot)
library(treeio)
#read in tree, root it, and make ggtree object
mutS2_tree = read.tree ("../RAxML_bipartitions.nwk")
outgroup <- c("Bacillus_subtilis_subsp_CAB14818.1", "Helicobacter_pylori_AAD07685.1",
"Borreliella_burgdorferi_AAC66481.1","Aquifex_aeolicus_AAC07247.1")
mutS2_tree <- root(ape::unroot(mutS2_tree), outgroup)
tree = ggtree(mutS2_tree) +
geom_tiplab() +
geom_treescale(offset = 0.1, x = 0, y=6) +
geom_text2(aes(subset = !isTip, label=label))
#read in prediction data and extract the mt and plastid data
target_dat = read.table("targeting_predictions.txt", header=TRUE, sep = "\t")
setwd("../targeting/")
###R code adapted from Warren et al. 2023 MBE. doi: 10.1093/molbev/msad163
###Modified by Shady Kuster
## Generate trees of aaRSs with targeting predictions ##
library (tidyverse)
library(ggtree)
library(aplot)
library(treeio)
#read in tree, root it, and make ggtree object
mutS2_tree = read.tree ("../RAxML_bipartitions.nwk")
outgroup <- c("Bacillus_subtilis_subsp_CAB14818.1", "Helicobacter_pylori_AAD07685.1",
"Borreliella_burgdorferi_AAC66481.1","Aquifex_aeolicus_AAC07247.1")
mutS2_tree <- root(ape::unroot(mutS2_tree), outgroup)
tree = ggtree(mutS2_tree) +
geom_tiplab() +
geom_treescale(offset = 0.1, x = 0, y=6) +
geom_text2(aes(subset = !isTip, label=label))
#read in prediction data and extract the mt and plastid data
target_dat = read.table("targeting_predictions.txt", header=TRUE, sep = "\t")
mito = target_dat %>% filter(Organelle=="Mitochondria")
mito[,4] <- round(mito[,4], 2)
chloro = target_dat %>% filter(Organelle=="Chloroplast")
chloro[,4] <- round(chloro[,4], 2)
#make the mt plot
mplot = ggplot(mito, aes(x=Algorithm, y=ID, fill=value)) +
geom_tile(width=.95, height=.95, color="gray", size = 0.5) +
theme_tree2() +
scale_fill_gradient(limits=c(0,1), low="white", high="chocolate4", name="Mitochondrial Targeting") +
theme(legend.position = "right", legend.direction = "horizontal") +
geom_text(aes(label=value), size = 2)
mplot
#make the plastid plot
cplot = ggplot(chloro, aes(x=Algorithm, y=ID, fill=value)) +
geom_tile(width=.95, height=.95, color="gray", size = 0.25) +
theme_tree2() +
scale_fill_gradient(limits=c(0,1), low="white", high="darkolivegreen4", name = "Plastid Targeting") +
theme(legend.position = "right", legend.direction = "horizontal") +
geom_text(aes(label=value), size = 2)
cplot
#combine the plots and make pdf
plot<-mplot %>% insert_left(tree) %>% insert_right(cplot)
plot
pdf(file="Targeting.pdf", width=10, height=6)
print(plot)
graphics.off()
###R code adapted from Warren et al. 2023 MBE. doi: 10.1093/molbev/msad163
###Modified by Shady Kuster
## Generate trees of aaRSs with targeting predictions ##
library (tidyverse)
library(ggtree)
library(aplot)
library(treeio)
#read in tree, root it, and make ggtree object
mutS2_tree = read.tree ("../RAxML_bipartitions.nwk")
outgroup <- c("Bacillus_subtilis_subsp_CAB14818.1", "Helicobacter_pylori_AAD07685.1",
"Borreliella_burgdorferi_AAC66481.1","Aquifex_aeolicus_AAC07247.1")
mutS2_tree <- root(ape::unroot(mutS2_tree), outgroup)
tree = ggtree(mutS2_tree) +
geom_tiplab() +
geom_treescale(offset = 0.1, x = 0, y=6) +
geom_text2(aes(subset = !isTip, label=label))
#read in prediction data and extract the mt and plastid data
target_dat = read.table("targeting_predictions.txt", header=TRUE, sep = "\t")
mito = target_dat %>% filter(Organelle=="Mitochondria")
mito[,4] <- round(mito[,4], 2)
chloro = target_dat %>% filter(Organelle=="Chloroplast")
chloro[,4] <- round(chloro[,4], 2)
#make the mt plot
mplot = ggplot(mito, aes(x=Algorithm, y=ID, fill=value)) +
geom_tile(width=.95, height=.95, color="gray", size = 0.5) +
theme_tree2() +
scale_fill_gradient(limits=c(0,1), low="white", high="chocolate4", name="Mitochondrial Targeting") +
theme(legend.position = "right", legend.direction = "horizontal") +
geom_text(aes(label=value), size = 2)
mplot
#make the plastid plot
cplot = ggplot(chloro, aes(x=Algorithm, y=ID, fill=value)) +
geom_tile(width=.95, height=.95, color="gray", size = 0.25) +
theme_tree2() +
scale_fill_gradient(limits=c(0,1), low="white", high="darkolivegreen4", name = "Plastid Targeting") +
theme(legend.position = "right", legend.direction = "horizontal") +
geom_text(aes(label=value), size = 2)
cplot
#combine the plots and make pdf
plot<-mplot %>% insert_left(tree) %>% insert_right(cplot)
plot
pdf(file="Targeting.pdf", width=10, height=6)
print(plot)
graphics.off()
setwd("../domains/")
#Set working directory
#Designate which packages to load and library
#This is a long list of packages I use frequently but I don't think all of them are at use in this script.
#If any are causing problems, try removing them from the list.
package_list<-c("dplyr", "ape", "treeio", "ggtree", "tidytree", "seqinr", "ggplot2", "phytools", "phangorn", "viridis")
#Loop to check if package is installed and 'libraried'. If it isn't already, then install and library
for(k in 1:length(package_list)){
library(package_list[k], character.only=TRUE)
}
#Read in the  tree (as a typical tree object)
tree<-ggtree::read.tree(file = "../RAxML_bipartitions.nwk")
ogroupNames <- c("Bacillus_subtilis_subsp_CAB14818.1", "Borreliella_burgdorferi_AAC66481.1",
"Helicobacter_pylori_AAD07685.1", "Aquifex_aeolicus_AAC07247.1")
#root tree
tree_unrooted <- ape::unroot(tree)
tree_rooted <- ape::root(tree_unrooted, outgroup = ogroupNames,
node = (mrca.phylo(tree_unrooted, ogroupNames)),
resolve.root=TRUE)
#Read in domain data for the tree
#This file was generated using the web-based tool at: https://www.ncbi.nlm.nih.gov/Structure/bwrpsb/bwrpsb.cgi
#then remove the first 7 lines
domain_dat<-read.table(file = "domains.txt", sep = "\t", header = TRUE)
#Change first column name
names(domain_dat)[1]<-"Newick_label"
#Get sequence file
seqs<-seqinr::read.fasta(file = "seqs.fasta")
#add the sequence length data to the df
domain_dat_full<-right_join(domain_dat, data.frame(Newick_label=names(seqs), Seq_ln=getLength(seqs)))
#Change the classes in the data frame
domain_dat_full[,1]<-paste(domain_dat_full[,1]) #sequence names
domain_dat_full[,4]<-as.numeric(paste(domain_dat_full[,4])) #from
domain_dat_full[,5]<-as.numeric(paste(domain_dat_full[,5])) #to
domain_dat_full[,6]<-as.numeric(paste(domain_dat_full[,6])) #e-val
domain_dat_full[,7]<-as.numeric(paste(domain_dat_full[,7])) #bitscore
domain_dat_full[,8]<-paste(domain_dat_full[,8]) #accession ID
domain_dat_full[,9]<-paste(domain_dat_full[,9]) #short name
domain_dat_full[,10]<-paste(domain_dat_full[,10]) #incomplete
domain_dat_full[,11]<-paste(domain_dat_full[,11]) #superfamily
domain_dat_full[,12]<-as.numeric(paste(domain_dat_full[,12]))
#Make a new column that's the same as newick labels
domain_dat_full[,13]<-paste(domain_dat_full[,1])
names(domain_dat_full)[13]<-"TipLabels"
#Make a ggtree object - does NOT keep BS vals
p<-ggtree(tree_rooted, branch.length ='none', ladderize = TRUE) + scale_color_viridis(discrete = TRUE)
#Add tip names in as a facet
p2<-facet_plot(p, panel='Species Names',
data=domain_dat_full, geom=geom_text, hjust = 0,
mapping=aes(x=0, label= TipLabels), size=3)
#add seq length line
p4<-facet_plot(p2, panel = "domains", data = domain_dat_full, geom= geom_segment,
mapping = aes(x=0, xend=Seq_ln, y=y, yend=y), size=0.5, color='black')
#Add domains
p5<-facet_plot(p4, panel = "domains", data = domain_dat_full, geom=geom_segment,
aes(x=From, xend=To, y=y, yend=y, col=Short.name), size=3) +
theme(legend.position = "right")
#Add names of domains (optional)
p6<-facet_plot(p5, panel='domains',
data=domain_dat_full, geom=geom_text,
mapping=aes(x=From+20, label= Short.name), size=2)
#Save tree as pdf
ggplot2::ggsave(filename = "Domains.pdf",
plot = p5,
width = 8,
height = (length(tree$tip.label)/4))
